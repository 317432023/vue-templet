## 单页+api+静态资源+ws 配置例子
#
# www.example.com
# www.example.com/api/
# s.example.com
# ws://im.example.com/ws
# 

# begin 单页+api
upstream api {
    server 127.0.0.1:8080;
    # 添加更多server ...
}
server {
    server_name example.com;
    rewrite ^(.*) http://www.example.com$1 permanent;
}
server {
    listen       80;
    server_name  www.example.com;

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }

    # 单页应用存放目录
    root D:/app;
    index index.html;

    # 检查$uri文件或文件夹是否存在不存在则内部重定向到@router节点
    location / { 
        try_files $uri $uri/ @router; 
        index index.html;
    }

    # 自定义节点@router
    location @router {
        rewrite ^.*$ /index.html last; # 跳转到/index.html首页
    }

    # api
    # uri以某个常规字符串开头，理解为匹配url路径即可。路径使用反向代理
    location ^~ /api/ { 
        proxy_pass http://api;
    }
}
# emd 单页+api

# begin s
server {
  listen       80;
  server_name  s.example.com;
  location / {
    # 静态资源存放目录
    root D:/static;
    autoindex on;

    # 允许静态资源特别是js库文件跨域
    set $origin '*';
    if ($http_origin) {
      set $origin "$http_origin";
    }

    add_header Access-Control-Allow-Origin "$origin";
    add_header Access-Control-Allow-Credentials "true";
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
    add_header Access-Control-Allow-Headers 'Origin,Access-Control-Request-Headers,Access-Control-Allow-Headers,DNT,X-Requested-With,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Accept,Connection,Cookie,X-XSRF-TOKEN,X-CSRF-TOKEN,Authorization';
  }
}
# end s

# begin ws
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}
upstream im {
    server 127.0.0.1:9090;
}
server {
    server_name im.example.com;
    #listen 443 ssl;
    listen 80;
    location / {
        proxy_pass http://im;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    #ssl_certificate /etc/letsencrypt/live/test.enzhico.net/fullchain.pem;
    #ssl_certificate_key /etc/letsencrypt/live/test.enzhico.net/privkey.pem;
}
# end ws